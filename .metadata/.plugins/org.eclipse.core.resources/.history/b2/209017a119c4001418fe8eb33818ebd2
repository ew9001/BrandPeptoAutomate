package mobile.test;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;
import java.util.concurrent.TimeUnit;

import org.openqa.selenium.By;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.iphone.IPhoneDriver;
import org.openqa.selenium.remote.CapabilityType;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.support.ui.Select;
import org.testng.annotations.Test;

import java.io.File;
import java.io.FileNotFoundException;

import ext.test4j.apache.commons.io.FileUtils;

public class CharminMobileIphone 
{
	
	public static void main(String[] args) throws Exception
	{
		 
	
	
	 
		  String timeStamp = new SimpleDateFormat("MMdd_HHmmss").format(Calendar.getInstance().getTime());
		  String local=(new java.io.File("").getAbsolutePath());
			String data="" + local + "/" + "cadi1.csv";	
			int row=1;
		BufferedReader br = null;
		String line = "";
		String cvsSplitBy = ",";
		
		
		
		
		// @SuppressWarnings("deprecation")
		 WebDriver driver = new IPhoneDriver("http://192.168.2.6:3001/wd/hub/");
	
		  //Write a review
		  
		 
		
		//Get scanner instance
	        Scanner scanner = new Scanner(new File(data));
	         
	        //Set the delimiter used in file
	        scanner.useDelimiter(",");
	         
	        //Get all tokens and store them in some data structure
	        //I am just printing them
	        while (scanner.hasNext())
	        {
	            System.out.print(scanner.next() + "|");
	            driver.get(scanner.next());
	            File scrFile1 = ((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(scrFile1, new File("Y://Screenshots/cadi1/" + timeStamp +  "/" + row + "-" + timeStamp + "-" + "cadilac.png"));
				row+=1;
				
				driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
	        }
	         
	        //Do not forget to close the scanner 
	        scanner.close();
		 
		 
		
	  }

}
